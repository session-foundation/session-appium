name: Android regression tests
run-name: '${{ inputs.RISK }} regressions on: ${{ inputs.BRANCH_TO_CHECKOUT }} (${{ inputs.APPIUM_REPO }})'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      APK_URL:
        description: 'url to test'
        required: true
        type: string
        default: https://oxen.rocks/session-foundation/session-android/release/1.22.1/session-android-20250406T231441Z-a9bfe783a-universal.tar.xz

      RISK:
        description: 'risks to target'
        required: false
        type: choice
        options:
          - 'high-risk'
          - 'medium-risk'
          - 'low-risk'
          - ''

      APPIUM_REPO:
        description: 'appium repo to checkout'
        required: true
        type: choice
        options:
          - session-foundation/session-appium
          - burtonemily/session-appium
          - Miki-Session/session-appium
          - bilb/session-appium
        default: session-foundation/session-appium

      BRANCH_TO_CHECKOUT:
        description: 'branch to checkout'
        required: true
        type: string
        default: add-tooling

      PLAYWRIGHT_RETRIES_COUNT:
        description: 'retries of failing tests to do at most'
        required: true
        type: choice
        options:
          - '0'
          - '1'
          - '2'
        default: '0'

      PRINT_FAILED_TEST_LOGS:
        description: 'print failed test logs (1 to enable) - DONT DO FOR FULL REGRESSION (it crashes github)'
        required: true
        type: choice
        options:
          - '0'
          - '1'
        default: '0'
      PRINT_ONGOING_TEST_LOGS:
        description: 'print ongoing test logs (1 to enable) - DONT DO FOR FULL REGRESSION (it crashes github)'
        required: true
        type: choice
        options:
          - '0'
          - '1'
        default: '0'

jobs:
  android-regression:
    runs-on: [self-hosted, linux, X64, qa-android]
    env:
      PLATFORM: 'android'
      IOS_APP_PATH_PREFIX: '../extracted/Session.app'
      ANDROID_APK: '../extracted/session-android.apk'
      APPIUM_ADB_FULL_PATH: '/opt/android/platform-tools/adb'
      ANDROID_SDK_ROOT: '/opt/android'
      PLAYWRIGHT_RETRIES_COUNT: ${{ github.event.inputs.PLAYWRIGHT_RETRIES_COUNT }}
      PRINT_FAILED_TEST_LOGS: ${{ github.event.inputs.PRINT_FAILED_TEST_LOGS }}
      PRINT_ONGOING_TEST_LOGS: ${{ github.event.inputs.PRINT_ONGOING_TEST_LOGS }}
      SDK_MANAGER_FULL_PATH: '/Users/emilyburton/Library/Android/sdk/cmdline-tools/latest/bin/sdkmanager'
      AVD_MANAGER_FULL_PATH: '/Users/emilyburton/Library/Android/sdk/cmdline-tools/latest/bin/avdmanager'
      ANDROID_SYSTEM_IMAGE: 'system-images;android-35;google_atd;x86_64'
      EMULATOR_FULL_PATH: '/Users/emilyburton/Library/Android/sdk/emulator/emulator'
      IOS_1_SIMULATOR: '4A75A0E1-9EDE-4169-93C3-DCE0F0C7664F'
      IOS_2_SIMULATOR: 'ACB6A587-8556-4EA0-87CF-4326A9A22051'
      IOS_3_SIMULATOR: 'D90B2AE2-FF30-49BE-9370-B789BAEED3BB'
      IOS_4_SIMULATOR: '59BD1CA4-7A8D-40FB-BAC7-CC99500644E0'
      IOS_5_SIMULATOR: '064F4F80-B81C-4B72-9715-43CD18975139'
      IOS_6_SIMULATOR: '56D8BA2F-BA0C-4D8F-8E5B-FD928E2C7C66'
      IOS_7_SIMULATOR: '012D6656-D6DE-4932-A460-72F5629EB2E0'
      IOS_8_SIMULATOR: 'D66CBD9C-7550-4055-8504-95F0AE700617'
      IOS_9_SIMULATOR: '84884861-F8EF-4481-A001-B403F2649FCF'
      IOS_10_SIMULATOR: 'C0EE6A21-044D-4B6E-B9A5-7AB977ADF305'
      IOS_11_SIMULATOR: 'B8E78B21-1432-41F3-A398-DE4FF8CF9DED'
      IOS_12_SIMULATOR: '8214A3A2-D4E1-4AA8-BB0F-394E3A49BCFA'

    steps:
      - uses: actions/checkout@v4
      - name: Runner Details
        run: |
          echo "BRANCH_TO_CHECKOUT ${{ github.event.inputs.BRANCH_TO_CHECKOUT }}"
          echo "APPIUM_REPO ${{ github.event.inputs.APPIUM_REPO }}"
          echo "APK_URL ${{ github.event.inputs.APK_URL }}"
          echo "RISK ${{ github.event.inputs.RISK }}"

      - name: Download APK
        run: |
          wget -q -O session-android.apk.tar.xz ${{ github.event.inputs.APK_URL }}
          ls
          pwd

      - name: Extract APK
        run: |
          tar xf session-android.apk.tar.xz
          pwd

      - name: Rename extracted folder
        run: |
          mv session-android-*universal extracted
          ls extracted
          mv extracted/*.apk extracted/session-android.apk
          ls extracted
          pwd

      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.APPIUM_REPO }}
          ref: ${{ github.event.inputs.BRANCH_TO_CHECKOUT }}
          path: 'forked-session-appium'
          lfs: true

      - uses: actions/setup-node@v4
        with:
          # node-version-file: 'forked-session-appium/.nvmrc'
          node-version: 18.15.0

      - name: Install yarn
        run: |
          npm install -g yarn
          corepack enable
          yarn set version 4.1.1

      - name: Install test dependencies
        run: |
          cd forked-session-appium
          ls
          git status
          touch yarn.lock
          yarn install --immutable

      - name: Start Appium server
        run: |
          cd forked-session-appium
          yarn "./node_modules/.bin/appium server --use-drivers=uiautomator2,xcuitest --port 8110 --allow-cors"

      - name: Build the Android tests
        run: |
          cd forked-session-appium
          yarn tsc

      - name: Restart adb server
        shell: bash
        continue-on-error: true # just so we don't fail if adb wasn't already running
        run: |
          source ./scripts/ci.sh
          adb kill-server;
          adb start-server;

      - name: Start emulators
        shell: bash
        run: |
          source ./scripts/ci.sh
          start_with_snapshots

      - name: List all tests
        run: |
          cd forked-session-appium
          pwd
          npx playwright test --list --reporter list --grep "@${PLATFORM} @${{ github.event.inputs.RISK }}"

      - name: Run the single test
        continue-on-error: true
        env:
          PLAYWRIGHT_WORKERS_COUNT: 1
          DEVICES_PER_TEST_COUNT: 2
        run: |
          cd forked-session-appium
          pwd
          yarn test "Unsent message syncs @${PLATFORM}" #Note: this has to be double quotes

      # - name: Run the 1-devices tests ​​with 4 workers
      #   continue-on-error: true
      #   env:
      #     PLAYWRIGHT_WORKERS_COUNT: 4
      #     DEVICES_PER_TEST_COUNT: 1
      #   run: |
      #     cd forked-session-appium
      #     pwd
      #     yarn test "@${PLATFORM} @${{ github.event.inputs.RISK }} @${DEVICES_PER_TEST_COUNT}-devices" #Note: this has to be double quotes

      # - name: Run the 2-devices tests ​​with 2 workers
      #   continue-on-error: true
      #   env:
      #     PLAYWRIGHT_WORKERS_COUNT: 2
      #     DEVICES_PER_TEST_COUNT: 2
      #   run: |
      #     cd forked-session-appium
      #     pwd
      #     yarn test "@${PLATFORM} @${{ github.event.inputs.RISK }} @${DEVICES_PER_TEST_COUNT}-devices" #Note: this has to be double quotes

      # - name: Run the tests ​​other tests with 1 worker
      #   continue-on-error: true
      #   env:
      #     PLAYWRIGHT_WORKERS_COUNT: 1
      #     DEVICES_PER_TEST_COUNT: 4
      #   run: |
      #     cd forked-session-appium
      #     pwd
      #     yarn test "@${PLATFORM} @${{ github.event.inputs.RISK }}" --grep-invert "@1-devices|@2-devices" #Note: this has to be double quotes

      - name: Kill all running emulators
        if: always()
        continue-on-error: true # just so we don't fail
        shell: bash
        run: |
          source ./scripts/ci.sh
          killall_emulators
